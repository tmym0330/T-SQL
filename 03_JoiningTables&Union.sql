SELECT * FROM SalesLT.Customer
SELECT * FROM SalesLT.SalesOrderHeader

SELECT * FROM SalesLT.CustomerAddress
SELECT * FROM SalesLT.Address
SELECT * FROM SalesLT.Customer
SELECT * FROM SalesLT.SalesOrderHeader
SELECT DISTINCT ProductID FROM SalesLT.SalesOrderDetail  -- 542, 142 distinct product
SELECT * FROM SalesLT.Product -- 295

SELECT *
FROM dbo.fact_transaction_2019  --396 817


SELECT *
FROM dbo.dim_payment_channel


SELECT *
FROM dbo.dim_platform

SELECT *
FROM dbo.dim_scenario  --348


-- Task 1: Generate invoice reports
-- Adventure Works Cycles sells directly to retailers, 
-- who must be invoiced for their orders. 
-- You have been tasked with writing a query to generate a list of invoices to be sent to customers.

-- 1.1 Retrieve customer orders
-- As an initial step towards generating the invoice report, 
-- write a query that returns the company name from the SalesLT.Customer table, 
-- and the sales order ID and total due from the SalesLT.SalesOrderHeader table. 

SELECT *
FROM  SalesLT.Customer AS Cus
LEFT JOIN SalesLT.SalesOrderHeader AS Order
ON Cus.CustomerID = Order.CustomerID

SELECT * FROM SalesLT.SalesOrderHeader
-- 1.2 Retrieve customer orders with addresses
-- Extend your customer orders query to include the Main Office address for each customer, including the full street address, city, state or province, postal code, and country or region
-- Tip: Note that each customer can have multiple addressees in the SalesLT.Address table, so the database developer has created the SalesLT.CustomerAddress table to enable a many-to-many relationship between customers and addresses. Your query will need to include both of these tables, and should filter the results so that only Main Office addresses are included. -->
 
-- --- Your code here 

-- Xuất phát từ table đơn hàng → JOIN AddressCustomer tìm AddressID —> JOIN Address lấy full thông địa chỉ 
  
 
-- Task 2: Retrieve customer data
-- As you continue to work with the Adventure Works customer, product and sales data, you must create queries for reports that have been requested by the sales team.
  
-- Retrieve a list of products
-- ○ A sales manager needs a list of ordered products with more information. 
-- You must write a query that returns a list of product name (is generated by the string preceded by the '-' character (example: HL Road Frame) ), only started selling in 2006, Product model name contains "Road", CategoryName contains "Bikes" and  ListPrice value with integer part equal to 2443

-- —-> Xác định đâu là những product dc ordered ? —> bổ sung thêm các thông tin : name, sellstartdate , model name, category name 

 
-- --- Your code here




-- PART 2: Use database PayTM
-- Description: 
-- Paytm is an Indian multinational financial technology company specializing in digital payment system, e-commerce and financial services. Paytm wallet is a secure and RBI-approved digital/mobile wallet that you can use for multiple purposes. It is like digital cash that you can utilize for any kind of consumer payment. You can add money to the Paytm wallet through UPI, internet banking, or credit/debit cards. Also, you can send money from a Paytm wallet to a bank account or another person’s Paytm wallet. 
-- This is a small database of payment transactions from 2019 to 2020 of PayTM. The database includes 6 tables: 
-- fact_transaction: Store information of all types of transactions: Payments, Top-up, Transfers, Withdrawals
-- dim_scenario: Detailed description of transaction types
-- dim_payment_channel: Detailed description of payment methods
-- dim_platform: Detailed description of payment devices
-- dim_status: Detailed description of the results of the transaction 

-- Task 1: Retrieve reports on transaction scenarios
-- 1.1 Retrieve a report that includes the following information: customer_id, transaction_id, scenario_id, transaction_type, sub_category, category. These transactions must meet the following conditions: 
-- Were created in Jan 2019
-- Transaction type is not payment
-- -- Your code here


-- 1.2 Retrieve a report that includes the following information: customer_id, transaction_id, scenario_id, transaction_type, category, payment_method. These transactions must meet the following conditions: 
-- Were created from Jan to June 2019
-- Had category type is shopping
-- Were paid by Bank account
